#define ZMK_POINTING_DEFAULT_MOVE_VAL 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 20

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <input/processors.dtsi>

&soft_off { split-peripheral-off-on-press; };

&mmv {
    acceleration-exponent = <1>;
    time-to-max-speed-ms = <500>;
    delay-ms = <0>;
};

&msc {
    acceleration-exponent = <0>;
    time-to-max-speed-ms = <300>;
    delay-ms = <0>;
};

&mmv_input_listener { input-processors = <&zip_xy_scaler 3 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

/ {
    combos {
        compatible = "zmk,combos";

        CapsWord {
            bindings = <&caps_word>;
            key-positions = <25 34>;
            layers = <0>;
        };

        backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <20 21>;
            layers = <0 1>;
        };

        delete {
            bindings = <&kp DELETE>;
            key-positions = <15 14>;
            layers = <0 1>;
        };

        right_bracket {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <17 16>;
            layers = <0>;
        };

        left_bracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <16 15>;
            layers = <0>;
        };

        brackets {
            bindings = <&macro_brackets>;
            key-positions = <17 15>;
            layers = <0>;
        };

        left_parentheses {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <18 19>;
            layers = <0>;
        };

        right_parentheses {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <19 20>;
            layers = <0>;
        };

        parentheses {
            bindings = <&macro_parentheses>;
            key-positions = <18 20>;
            layers = <0>;
        };

        left_brace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <39 40>;
            layers = <0>;
        };

        right_brace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <41 40>;
            layers = <0>;
        };

        braces {
            bindings = <&macro_braces>;
            key-positions = <41 39>;
            layers = <0>;
        };

        lt {
            bindings = <&kp LESS_THAN>;
            key-positions = <44 45>;
            layers = <0>;
        };

        gt {
            bindings = <&kp GREATER_THAN>;
            key-positions = <45 46>;
            layers = <0>;
        };

        ltgt {
            bindings = <&macro_ltgt>;
            key-positions = <44 46>;
            layers = <0>;
        };

        slash {
            bindings = <&kp SLASH>;
            key-positions = <15 26>;
            layers = <0>;
        };

        backslash {
            bindings = <&kp BSLH>;
            key-positions = <20 33>;
            layers = <0>;
        };
    };

    behaviors {
        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            flavor = "balanced";
            hold-trigger-key-positions = <13 14 15 16 17 26 27 28 29 41 38 39 40 25 37 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 38 39 40 41 36>;
        };

        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            flavor = "balanced";
            hold-trigger-key-positions = <18 19 20 21 22 30 31 32 33 34 46 44 45 46 47 48 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 44 45 46 47 48 49>;
        };
    };

    soft_off_wakers {
        compatible = "zmk,soft-off-wakeup-sources";
        wakeup-sources = <&kscan0>;
    };

    macros {
        printscr_area_mem: printscr_mem {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(LC(LS(NUMBER_4)))>;
            label = "PRINTSCR_MEM";
        };

        printscr_area_file: printscr_file {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(LS(NUMBER_4))>;
            label = "PRINTSCR_FILE";
        };

        macro_brackets: macro_brackets {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET &kp RIGHT_BRACKET &kp LEFT>;
            label = "MACRO_BRACKETS";
        };

        macro_parentheses: macro_parentheses {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_PARENTHESIS &kp RIGHT_PARENTHESIS &kp LEFT>;
            label = "MACRO_PARENTHESES";
        };

        macro_braces: macro_braces {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACE &kp RIGHT_BRACE &kp LEFT>;
            label = "MACRO_BRACES";
        };

        macro_ltgt: macro_ltgt {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LESS_THAN &kp GREATER_THAN &kp LEFT>;
            label = "MACRO_LTGT";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "default";
            bindings = <
&kp GRAVE          &kp N1             &kp N2        &kp N3           &kp N4           &kp N5                                     &kp N6     &kp N7            &kp N8           &kp N9        &kp N0                 &kp MINUS
&kp ESC            &kp Q              &kp W         &kp E            &kp R            &kp T                                      &kp Y      &kp U             &kp I            &kp O         &kp P                  &kp LEFT_BRACKET
&kp TAB            &hml LEFT_SHIFT A  &hml LCTRL S  &hml LEFT_ALT D  &hml LEFT_GUI F  &kp G                                      &kp H      &hmr RIGHT_GUI J  &hmr LEFT_ALT K  &hmr RCTRL L  &hmr RIGHT_SHIFT SEMI  &kp SQT
&kp RIGHT_BRACKET  &kp Z              &kp X         &kp C            &kp V            &kp B      &kp C_MUTE    &kp C_PLAY_PAUSE  &kp N      &kp M             &kp COMMA        &kp DOT       &kp FSLH               &kp BSLH
                                      &none         &none            &mo 4            &lt 1 TAB  &kp SPACE     &kp RET           &lt 2 ESC  &mo 4             &none            &none
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>,
                <&inc_dec_kp C_NEXT C_PREV>;
        };

        nav_num {
            display-name = "nav";
            bindings = <
&none   &none           &none      &none       &none        &none                            &none         &none                   &none             &none          &none                   &none
&trans  &none           &kp HOME   &kp UP      &kp END      &kp PAGE_UP                      &kp KP_COMMA  &kp N7                  &kp N8            &kp N9         &kp PLUS                &kp KP_MULTIPLY
&trans  &kp LEFT_SHIFT  &kp LEFT   &kp DOWN    &kp RIGHT    &kp PAGE_DOWN                    &kp F12       &hmr LEFT_GUI NUMBER_4  &hmr LEFT_ALT N5  &hmr LCTRL N6  &hmr RIGHT_SHIFT MINUS  &kp KP_DIVIDE
&none   &kp K_UNDO      &kp K_CUT  &kp K_COPY  &kp K_PASTE  &none          &trans    &trans  &kp KP_DOT    &kp N1                  &kp N2            &kp N3         &kp EQUAL               &none
                        &none      &none       &trans       &trans         &trans    &trans  &mo 3         &kp N0                  &none             &none
            >;

            sensor-bindings = <&inc_dec_kp 0 0>, <&inc_dec_kp RIGHT LEFT>;
        };

        symbols {
            display-name = "sym";
            bindings = <
&none  &none            &none      &none              &none           &none                              &none             &none              &none      &none                 &none                  &none
&none  &kp EXCL         &kp AT     &kp HASH           &kp DOLLAR      &kp PERCENT                        &kp CARET         &kp AMPS           &kp ASTRK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &none
&none  &kp NON_US_BSLH  &kp SQT    &kp DOUBLE_QUOTES  &kp SEMICOLON   &none                              &kp COLON         &kp QUESTION       &kp PLUS   &kp MINUS             &kp PIPE               &none
&none  &kp TILDE        &kp GRAVE  &kp SLASH          &kp LEFT_BRACE  &kp RIGHT_BRACE  &trans    &trans  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp EQUAL  &kp UNDER             &none                  &none
                        &none      &none              &trans          &mo 3            &trans    &trans  &trans            &none              &none      &none
            >;
        };

        multimedia_fn {
            display-name = "media";
            bindings = <
&none  &none         &none         &none                &none               &none                               &none           &none   &none    &none    &none    &none
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2         &bt BT_SEL 3        &bt BT_SEL 4                        &soft_off       &kp F9  &kp F10  &kp F11  &kp F12  &none
&none  &bt BT_PRV    &bt BT_NXT    &printscr_area_file  &printscr_area_mem  &kp C_PLAY_PAUSE                    &bt BT_CLR      &kp F5  &kp F6   &kp F7   &kp F8   &none
&none  &none         &kp C_PREV    &kp C_VOLUME_DOWN    &kp C_VOLUME_UP     &kp C_NEXT        &trans    &trans  &bt BT_CLR_ALL  &kp F1  &kp F2   &kp F3   &kp F4   &none
                     &none         &none                &trans              &trans            &trans    &trans  &trans          &none   &none    &none
            >;

            sensor-bindings = <&inc_dec_kp 0 0>, <&inc_dec_kp RIGHT LEFT>;
        };

        mouse {
            display-name = "mouse";
            bindings = <
&none  &none  &none           &none           &none            &none                     &none      &none           &none           &none            &none  &none
&none  &none  &mkp RCLK       &msc SCRL_UP    &mkp LCLK        &none                     &mkp MCLK  &mkp LCLK       &mmv MOVE_UP    &mkp RCLK        &none  &none
&none  &none  &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_RIGHT  &none                     &none      &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &none  &none
&none  &none  &none           &none           &none            &none   &trans    &trans  &none      &none           &none           &none            &none  &none
              &none           &none           &trans           &trans  &trans    &trans  &trans     &trans          &none           &none
            >;
        };
    };
};
